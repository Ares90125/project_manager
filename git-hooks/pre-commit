#!/bin/sh

# Runs Prettier, ESLint and tsc on .ts, .tsx and .js files (not .md nor .json files). Prettier and ESLint only check the
# committed files, whereas tsc checks all project files, since it's not possible to run tsc on specific files while
# obeying the tsconfig.json options (see https://github.com/microsoft/TypeScript/issues/27379 and
# https://www.npmjs.com/package/tsc-files).
# This hook always commits, even if errors are found. And it does not modify the files (ie it does not do `prettier
# write`), it only checks if there is any issue and reports it.
# Inspired by https://prettier.io/docs/en/precommit.html#option-6-shell-script

print_result() {
  ERROR_CODE=$?
  if [ $ERROR_CODE -eq 0 ]; then
    printf "‚úÖ %s Success\n\n" "$1"
  else
    printf "‚ùå %s Failure\n\n" "$1"
  fi
}

FILES=$(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\ |g' | awk '/\.ts$|\.tsx$|\.js$/')

printf "üìÅ Files\n\n%s" "$FILES"

[ -z "$FILES" ] && exit 0

printf "\n\nüîç Prettier\n\n"
echo "$FILES" | xargs ./node_modules/.bin/prettier --ignore-unknown --check
printf "\n"
print_result "Prettier"

printf "\nüîç ESLint\n"
echo "$FILES" | xargs ./node_modules/.bin/eslint
print_result "ESLint"

printf "\nüîç tsc\n"
npx tsc --noEmit
print_result "tsc"

exit 0
